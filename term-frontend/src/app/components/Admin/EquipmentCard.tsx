"use client";

import React from "react";
import type { Equipment } from "@/app/type/equipment";
import { useRouter } from "next/navigation";
import Image from "next/image";

// üí° ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Props ‡πÉ‡∏´‡πâ EquipmentCard ‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô
interface EquipmentCardProps {
  item: Equipment;
  onEdit: (item: Equipment) => void;
  onDelete: (itemId: number, itemName: string) => Promise<void>;
  // üí° ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Role ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° (‡πÄ‡∏ä‡πà‡∏ô 'USER', 'ADMIN', 'SERVER_ADMIN')
  userRole: "USER" | "ORG_STAFF" | "SYSTEM_ADMIN";
  categories: { id: number; categoryName: string }[];
}

const EquipmentCard: React.FC<EquipmentCardProps> = ({
  item,
  onEdit,
  onDelete,
  userRole,
  categories,
}) => {
  const router = useRouter();

  // üí° Logic ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const canEdit = userRole === "ORG_STAFF" || userRole === "SYSTEM_ADMIN";

  // üí° ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô item.isAvailable ‡πÄ‡∏õ‡πá‡∏ô availableQuantity ‡∏ï‡∏≤‡∏° Schema ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
  // ‡πÅ‡∏ï‡πà‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÉ‡∏ä‡πâ isAvailable ‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
  const statusColor = item.isAvailable ? "text-green-600" : "text-red-600";
  const statusText = item.isAvailable ? "Available" : "Not Available";

  const handleCardClick = () => {
    // üí° ‡∏ô‡∏≥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Detail ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ ID
    router.push(`/components/detail/${item.id}`);
  };

  return (
    <div
      key={item.id}
      className="bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition cursor-pointer flex flex-col justify-between h-full"
    >
      {/* --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ (Detail) --- */}
      <div className="flex-grow" onClick={handleCardClick}>
        <h3 className="text-xl font-bold text-gray-900 truncate mb-1">
          {item.name}
        </h3>
        <p className="text-sm text-gray-500 mb-2">
          {item.description || "No description provided."}
        </p>
        <Image
          src={item.imageUrl}
          alt={item.name}
          width={200}
          height={200}
          className="w-full object-cover rounded mb-2"
        />
        {/* <img
          src={item.imageUrl || "/placeholder-image.png"} // ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏û placeholder ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ URL
          alt={item.name}
          className="w-full h-40 object-cover rounded mb-2"
        /> */}
        <div className="mt-3 text-sm space-y-1">
          {/* <p className="text-gray-700">
            ID: <span className="font-medium">{item.id}</span>
          </p> */}
          <p className="text-gray-700">
            ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:{" "}
            <span className="font-medium">
              {categories.length > 0
                ? categories.find((c) => c.id === item.categoryId)
                    ?.categoryName || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"
                : "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..."}
            </span>
          </p>
          <p className="text-gray-700">
            ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:{" "}
            <span className="font-medium">{item.totalQuantity}</span>
          </p>
          <p className="text-gray-700">
            ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:
            <span className={`font-semibold ml-1 ${statusColor}`}>
              {statusText}
            </span>
          </p>
        </div>
      </div>

      {/* --- ‡∏™‡πà‡∏ß‡∏ô Action (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin) --- */}
      <div>
        {canEdit && (
          // üí° ‡πÉ‡∏ä‡πâ Flexbox ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
          // 'flex' | 'justify-between' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏±‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏Ñ‡∏ô‡∏•‡∏∞‡∏ù‡∏±‡πà‡∏á | 'space-x-3' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πâ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°
          <div className="mt-4 border-t pt-3 flex justify-between space-x-3">
            {/* 1. ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ã‡πâ‡∏≤‡∏¢) */}
            <button
              // ‡πÉ‡∏ä‡πâ w-1/2 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏ç‡πà)
              // ‡πÅ‡∏ï‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏Ñ‡πà padding ‡∏Å‡πá‡∏û‡∏≠ ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ flex ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
              className="flex-1 bg-blue-500 text-white px-3 py-2 text-sm rounded hover:bg-blue-600 transition disabled:opacity-50"
              onClick={(e) => {
                e.stopPropagation(); // üí° ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å handleCardClick
                onEdit(item);
              }}
            >
              ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            </button>

            {/* 2. ‡∏õ‡∏∏‡πà‡∏° Delete (‡∏Ç‡∏ß‡∏≤) */}
            <button
              // ‡πÉ‡∏ä‡πâ flex-1 ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡∏ô‡∏≤‡∏î‡∏û‡∏≠‡πÜ ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
              onClick={(e) => {
                e.stopPropagation(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å handleCardClick
                onDelete(item.id, item.name);
              }}
              className="flex-1 text-sm px-3 py-2 rounded bg-red-500 text-white hover:bg-red-600 transition"
            >
              Delete
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

export default EquipmentCard;
