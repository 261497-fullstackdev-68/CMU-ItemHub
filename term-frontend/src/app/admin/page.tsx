"use client";

import React, { useState, useEffect } from "react";
import { Sidebar } from "@components/Sidebar";
import Navbar from "@components/Navbar";
import api from "@/app/lib/api";
import type { Users } from "@/app/type/users";
import type { Organizations } from "@/app/type/organizations";
import type { Equipment } from "../type/equipment";
import { fetchLoansByOrgAndStatus } from "../utils/fetchByOrgIdWithStatus";

// üí° DUMMY DATA (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•)
const DUMMY_UPCOMING_LOANS = [
  {
    id: 101,
    borrower: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÅ‡∏™‡∏á‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå",
    equipment: "‡∏ß‡∏¥‡∏ó‡∏¢‡∏∏‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£ ‡∏£‡∏∏‡πà‡∏ô A",
    date: "‡∏û. 18 ‡∏ï.‡∏Ñ.",
  },
  {
    id: 102,
    borrower: "‡∏°‡∏≤‡∏£‡∏¥‡∏™‡∏≤ ‡πÉ‡∏à‡∏î‡∏µ",
    equipment: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û X-300",
    date: "‡∏û‡∏§. 19 ‡∏ï.‡∏Ñ.",
  },
];
const DUMMY_DUE_RETURNS = [
  {
    id: 201,
    borrower: "‡πÄ‡∏à‡∏ô‡∏à‡∏¥‡∏£‡∏≤ ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç",
    equipment: "‡πÇ‡∏î‡∏£‡∏ô ‡∏£‡∏∏‡πà‡∏ô Phantom",
    date: "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
  },
  {
    id: 202,
    borrower: "‡∏ä‡∏≤‡∏ç‡∏ä‡∏±‡∏¢ ‡∏¢‡∏¥‡πâ‡∏°‡∏™‡∏π‡πâ",
    equipment: "‡∏™‡∏≤‡∏¢‡πÑ‡∏ü‡∏ï‡πà‡∏≠‡∏û‡πà‡∏ß‡∏á",
    date: "‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ",
  },
];

const AdminPage: React.FC = () => {
  const [organizations, setOrganizations] = useState<Organizations[]>([]);
  const [equipment, setEquipment] = useState<Equipment[]>([]);
  const [pendingLoans, setPendingLoans] = useState<any[]>([]);
  const [currentUser, setCurrentUser] = useState<Users>();
  const [userRoles, setUserRoles] = useState<
    { organizationId?: number; role: "SYSTEM_ADMIN" | "ORG_STAFF" | "USER" }[]
  >([]);
  const [selectedOrgId, setSelectedOrgId] = useState<number | null>(null);

  // ‚úÖ ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡∏ó‡∏µ‡πà user ‡∏°‡∏µ role = ORG_STAFF
  const staffOrganizations = organizations.filter((org) =>
    userRoles.some((r) => r.role === "ORG_STAFF" && r.organizationId === org.id)
  );

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  useEffect(() => {
    async function fetchData() {
      try {
        const userRes = await api.get("users/info");
        if (userRes.data.ok) {
          console.log(userRes.data);
          setCurrentUser(userRes.data.user);
          setUserRoles(userRes.data.roles);

          const orgRes = await api.get("organizations");
          setOrganizations(orgRes.data);

          const staffOrgs = userRes.data.roles.filter(
            (r: any) => r.role === "ORG_STAFF" && r.organizationId
          );

          if (staffOrgs.length > 0) {
            const orgId = staffOrgs[0].organizationId;
            setSelectedOrgId(orgId);
            fetchEquipment(orgId);
          }
        }
      } catch (err) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", err);
      }
    }

    fetchData();
  }, []);

  useEffect(() => {
    async function fetchPending(selectedOrgId: number | null) {
      if (!selectedOrgId) return;
      const loans = await fetchLoansByOrgAndStatus(selectedOrgId, "pending");
      setPendingLoans(loans);
    }

    fetchPending(selectedOrgId);
  }, [selectedOrgId]);

  const fetchEquipment = async (orgId: number) => {
    try {
      const res = await api.get(`equipment/findByOrganizationId/${orgId}`);
      setEquipment(res.data);
    } catch (err) {
      console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    }
  };

  // ‚úÖ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Organization
  const handleOrgChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const orgId = Number(e.target.value);
    setSelectedOrgId(orgId);
    fetchEquipment(orgId);
  };

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col">
      <Navbar />

      <div className="flex flex-1">
        {/* Sidebar */}
        <aside className="w-64 bg-white shadow-xl border-r border-gray-200">
          <Sidebar />
        </aside>

        {/* Main Content */}
        <main className="flex-1 p-8 overflow-y-auto">
          <h1 className="text-3xl font-bold text-gray-900 mb-6">
            Dashboard {selectedOrgId ? `(‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô ${selectedOrgId})` : ""}
          </h1>
          {/* ‚úÖ Organization Dropdown */}
          {staffOrganizations.length > 0 && (
            <div className="mb-6">
              <label className="text-sm font-medium text-gray-700 mr-2">
                ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô:
              </label>
              <select
                value={selectedOrgId || ""}
                onChange={handleOrgChange}
                className="border border-gray-300 rounded-md p-2 focus:outline-none focus:ring-2 focus:ring-indigo-500"
              >
                {!selectedOrgId && (
                  <option value="" disabled>
                    -- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô --
                  </option>
                )}
                {staffOrganizations.map((org) => (
                  <option key={org.id} value={org.id}>
                    {org.name}
                  </option>
                ))}
              </select>
            </div>
          )}

          {/* --- 1. ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° --- */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-10">
            <div className="bg-white p-6 rounded-lg shadow-md">
              <p className="text-sm font-medium text-gray-500">
                Total Items (Units)
              </p>
              <p className="text-3xl font-bold text-indigo-600">
                {equipment.length || 0}
              </p>
            </div>
            <div className="bg-white p-6 rounded-lg shadow-md">
              <p className="text-sm font-medium text-gray-500">Items On Loan</p>
              <p className="text-3xl font-bold text-yellow-600">85</p>
            </div>
            <div className="bg-white p-6 rounded-lg shadow-md">
              <p className="text-sm font-medium text-gray-500">Available Now</p>
              <p className="text-3xl font-bold text-green-600">
                {85 - equipment.length}
              </p>
            </div>
          </div>

          {/* --- 2. Action Items (2-Column Layout) --- */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* ‡∏ã‡πâ‡∏≤‡∏¢: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÜ‡∏ô‡∏µ‡πâ */}
            <div className="lg:col-span-2 space-y-8">
              {/* ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ */}
              <div className="bg-white p-6 rounded-xl shadow-lg border border-gray-200">
                <h2 className="text-2xl font-semibold text-gray-800 mb-4">
                  ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
                </h2>
                <p className="text-sm text-gray-600 mb-4">
                  ‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏´‡∏°‡πà <strong>{pendingLoans.length}</strong> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                  ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                </p>
                <button className="bg-yellow-500 text-white px-4 py-2 rounded-lg hover:bg-yellow-600 transition">
                  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                </button>
              </div>

              {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÜ‡∏ô‡∏µ‡πâ */}
              <div className="bg-white p-6 rounded-xl shadow-lg border border-gray-200">
                <h2 className="text-2xl font-semibold text-gray-800 mb-4">
                  ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ
                </h2>
                <ul className="divide-y divide-gray-100">
                  {DUMMY_DUE_RETURNS.map((item) => (
                    <li
                      key={item.id}
                      className="py-3 flex justify-between items-center text-sm"
                    >
                      <div>
                        <p className="font-medium text-gray-900">
                          {item.equipment} ({item.borrower})
                        </p>
                        <p className="text-xs text-gray-500">ID: {item.id}</p>
                      </div>
                      <span
                        className={`font-bold ${
                          item.date === "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ"
                            ? "text-red-600"
                            : "text-orange-500"
                        }`}
                      >
                        {item.date}
                      </span>
                    </li>
                  ))}
                </ul>
                <div className="mt-4 pt-4 border-t text-right">
                  <a
                    href="/admin/returns"
                    className="text-indigo-600 text-sm hover:underline"
                  >
                    ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚Üí
                  </a>
                </div>
              </div>
            </div>

            {/* ‡∏Ç‡∏ß‡∏≤: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡πÅ‡∏•‡∏∞ Quick Links */}
            <div className="lg:col-span-1 space-y-8">
              {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ */}
              <div className="bg-white p-6 rounded-xl shadow-lg border border-gray-200">
                <h2 className="text-xl font-semibold text-gray-800 mb-4">
                  ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á
                </h2>
                <ul className="space-y-3">
                  {DUMMY_UPCOMING_LOANS.map((item) => (
                    <li
                      key={item.id}
                      className="p-3 bg-gray-50 rounded-lg border border-blue-100"
                    >
                      <p className="text-sm font-semibold text-gray-900">
                        {item.equipment}
                      </p>
                      <p className="text-xs text-gray-600">
                        ‡πÇ‡∏î‡∏¢: {item.borrower}
                      </p>
                      <p className="text-xs font-bold text-blue-600 mt-1">
                        ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏∑‡∏°: {item.date}
                      </p>
                    </li>
                  ))}
                </ul>
              </div>

              {/* Quick Links */}
              <div className="bg-white p-6 rounded-xl shadow-lg border border-gray-200">
                <h2 className="text-xl font-semibold text-gray-800 mb-4">
                  Quick Links
                </h2>
                <ul className="space-y-2 text-sm">
                  <li>
                    <a
                      href={`/admin/inventory?orgId=${selectedOrgId}`}
                      className="text-indigo-600 hover:underline"
                    >
                      ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Inventory
                    </a>
                  </li>
                  <li>
                    <a
                      href={`/admin/users?orgId=${selectedOrgId}`}
                      className="text-indigo-600 hover:underline"
                    >
                      ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                    </a>
                  </li>
                  <li>
                    <a
                      href={`/admin/reports?orgId=${selectedOrgId}`}
                      className="text-indigo-600 hover:underline"
                    >
                      ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
};

export default AdminPage;
